#!/bin/bash


# Ensure 'getopts' works with 'source' command
OPTIND=1

G_CLUSTERNAME=""
G_SUBCLUSTER=""
Gb_revisionSet=0
G_SYNOPSIS="

    NAME
    
        cluster
        
    SYNOPSIS
    
        . cluster [<name>] [<subcluster>]
        
    ARGS
    
    	<name>
    	Setup cluster specific variables for <name>. If not specified, will
    	use hostname to setup specific environment.
    	
    	<subcluster>
    	An additional qualifier that further specifies some cluster component.

    DESCRIPTION
    
        'cluster' is a simple script to easily source different cluster 
        environments; typically this appends relevant PATH extensions to the
        cluster scheduler, etc.
        
    NB!
        
        To have variables set by this script to be valid in the caller (i.e.
        parent's scope), this script *must* be sourced and not executed. That 
        means instead of typing:
        
                $>cluster
                
        to setup the FreeSurfer stable enviroment, you have to type:
        
                $>. cluster
                
        note the dot '.' at the beginning! Without this dot, the specified
        FreeSurfer environment will NOT be initialized.
        
    HISTORY
    
        25 March 2013
        o Initial development.
        
"

function synopsis_show
{
        # ARGS
        # $1            in (opt)                if passed, exit to shell
        #                                       passing code $1.
        echo "USAGE:"
        echo "$G_SYNOPSIS"
        if (( $# == 1 )) ; then exit $1 ; fi
}

# This handles the following:
#       -x                      : show help and exit
#       1st command ling arg    : set G_VERSION
#       if exist 2nd arg        : set G_REVISION
#       additional args         : show help and exit
if (( $# <= 2 )) ; then
    if [[ $1 == "-x" ]] ; then synopsis_show 1; fi
    if (( ${#1} )) ; then G_CLUSTERNAME=$1;  fi
    if (( $#==2 )) ; then G_SUBCLUSTER=$2; fi
else
    synopsis_show 1
fi

OS=$(uname -a | awk '{print $1}')
echo "Host type is $HOSTTYPE-${OS}"

# Check if we are on a PICES host (names start with 'rc')
RC=$(hostname | awk -F \- '{print $1}')
if [[ $RC == "rc" ]] ; then
    CLUSTERPATH=""
    export G_CLUSTERNAME="MOSIX"
fi
if [[ $(hostname | awk -F \. '{print $1}') == "launchpad" ]] ; then
    CLUSTERPATH=""
    export G_CLUSTERNAME="qsub"
fi
if [[ $(hostname | awk -F \. '{print $1}') == "eris1n2" ]] ; then
    CLUSTERPATH="/PHShome/rp937/perl5/bin:/hptc_cluster/lsf/8.0/linux2.6-glibc2.3-x86_64/etc:/hptc_cluster/lsf/8.0/linux2.6-glibc2.3-x86_64/bin"
    export G_CLUSTERNAME="lsub"
fi

if (( ${#G_CLUSTERNAME} )) ; then
    echo "cluster:  $G_CLUSTERNAME"
    if (( ${#G_SUBCLUSTER} )) ; then
        echo "headnode: $G_SUBCLUSTER"
    else
        echo "headnode: $(hostname)"
        G_SUBCLUSTER=$(hostname)
    fi
    if (( ${#CLUSTERPATH} )) ; then
        export PATH="$CLUSTERPATH":$PATH
    fi

    OS=$(uname -a | awk '{print $1}')
    export PROMPTPREFIX="[$(whoami)@$name:${HOSTTYPE}-${OS}-${G_CLUSTERNAME}]"
fi


